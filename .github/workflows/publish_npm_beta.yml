# # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Workflow Publish Package to npmjs and GitHub Packages
# ---------------------------------------------------
# https://dev.to/astagi/publish-to-npm-using-github-actions-23fn
# https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-nodejs-packages
# https://docs.github.com/en/actions/guides/publishing-nodejs-packages
# https://docs.github.com/en/actions/guides/publishing-docker-images
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

name: 'Publish: Beta Package to npmjs and GitHub Packages'
run-name: 'Publish to npmjs and GitHub Packages by @${{ github.actor }} on ${{ github.event_name }}'

on:
  workflow_dispatch: # Cho phép chạy thủ công
  release:
    types: [published] # Chỉ chạy khi release được publish

# Remove all permissions by default
permissions: write-all

env:
  SERVER: production
  PREFIX: 0.1
  VERSION: 0.1.${{ github.run_number }}
  ORIGINAL_NAME: ''
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  publish-npm-github:
    runs-on: ubuntu-latest

    steps:
      # 1. Định nghĩa giá trị prefix
      - name: Define Prefix
        id: prefix
        run: |
          echo "PREFIX=0.1" >> $GITHUB_ENV # Đặt giá trị prefix phiên bản

      # 2. Thiết lập số version tự động
      - name: Set Build Version
        id: versioning
        run: |
          # Kiểm tra số build hiện tại từ GitHub Run Number
          BUILD_NUMBER=${{ github.run_number }}
          echo "VERSION=${{ env.PREFIX }}.${BUILD_NUMBER}" >> $GITHUB_ENV

      # 3. Checkout code từ repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 3.1. Lấy giá trị name gốc từ package.json
      - name: Get original package name
        run: |
          # 3.1.1 Lấy giá trị name gốc từ package.json
          ORIGINAL_NAME=$(jq -r '.name' package.json)
          echo "ORIGINAL_NAME=$ORIGINAL_NAME" >> $GITHUB_ENV

          # 3.1.2. Lấy giá trị version gốc từ package.json
          ORIGINAL_VERSION=$(jq -r '.version' package.json)
          echo "ORIGINAL_VERSION=$ORIGINAL_VERSION"

          # 3.1.3. Tạo biến BASE_VERSION từ ORIGINAL_VERSION
          BASE_VERSION=$(echo "$ORIGINAL_VERSION" | cut -d. -f1-2)
          echo "BASE_VERSION=$BASE_VERSION"

          # 3.1.4. Đặt giá trị VERSION mới cho môi trường
          echo "VERSION=$BASE_VERSION.${{ github.run_number }}" >> $GITHUB_ENV

      # 3.2. Ghi đè giá trị version và name (bổ sung -beta) trong package.json
      - name: Override package.json version and name
        run: |
          # Ghi đè giá trị name và version trong package.json
          jq '.version = "${{ env.VERSION }}" | .name = "${{ env.ORIGINAL_NAME }}-beta"' package.json > package.tmp.json && mv package.tmp.json package.json
          # jq '.version = "${{ env.VERSION }}"' package.json > package.tmp.json && mv package.tmp.json package.json

      # 4. Thiết lập Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.12' # Bạn có thể thay đổi version nếu cần
          registry-url: 'https://registry.npmjs.org/' # Registry chính thức của npm
          # scope: '@nqdev'  # Scope của package

      # 5. Cài đặt pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          # version: 9.1.4
          version: 10.11.0
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
            - args: [--global, gulp, eslint, typescript]

      # 6. Cài đặt dependencies
      - name: Install dependencies
        # run: pnpm install --frozen-lockfile
        run: pnpm install --no-frozen-lockfile

      # 7. Run Lint
      - name: Build and Lint
        run: pnpm run prepublishOnly

      # 7. Build package
      - name: Build
        run: pnpm run build

      # 8. Publish lên npm
      # https://github.com/marketplace/actions/npm-publish
      - name: Publish to npm
        if: success()
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # 9. Publish lên GitHub Packages
      - name: Publish to GitHub Packages
        if: success()
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GHCR_TOKEN }}" >> ~/.npmrc
          echo "@nqdev:registry=https://npm.pkg.github.com" >> ~/.npmrc
          pnpm publish --registry=https://npm.pkg.github.com --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GHCR_TOKEN }}

      # # 10. Tạo Git tag với version mới
      # - name: Create and push tag
      #   if: success()
      #   run: |
      #     git config --local user.name "GitHub Actions"
      #     git config --local user.email "github-actions@github.com"
      #     git tag -a v${{ env.VERSION }} -m "Release v${{ env.VERSION }}"
      #     git push origin v${{ env.VERSION }}
